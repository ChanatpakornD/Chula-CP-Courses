Functional programming
- No changing value
- No assignment
- No loop
- Focusing only function
- Function can defined anywhere
- There are operators that can compose function

What are good about functional programming ?
- Simpler reasoning (code is very simple!)
- Good for multicore and cloud computing
        - Avoid modifying var by different parts of the programs.
- Place to use (where we want scala solutions)
        - Web
        - Trading platforms
        - Simulations

Evaluating Function == This substitution model(evaluating until its return the value)

call by value , call by name == can be determined used in arguments of the function
if (call by value) --> add(3+1, 5+1) = add(4, 5+1) = add (4, 6)
CALL BY NAME TALKING LATER...

...In functional programming language, recursion is important.
(WARNING!: recursion need to be in right format to prevent the addition of stack frame)
The format of recursion we need to write :: tail-recursion (language can detect this format)


