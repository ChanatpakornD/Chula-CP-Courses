#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main() {

    int N,M;
    int R;

    vector<vector<int>> matrix(N, vector<int>(M));
    for(int i=0 ; i < N; i++) {
        for (int j=0 ; j < M; ++j) {
            cin >> matrix[i][j];
        }
    }
         
    cin >> N >> M >> R;

    while(R--) {
        int r1,c1,r2,c2;
        cin >> r1 >> c1 >> r2 >> c2;
        if (r1 > r2 || c1 > c2) {
            cout << "INVALID\n";
            continue;
        } else if (r1 > N || r2 > N || c1 > M || c2 > M) {
            cout << "OUTSIDE\n";
            continue;
        }
        //limit the boundaries
        r1 = min(r1,N); r2 = min(r2,N); c1 = min(c1,M); c2 = min(c2,M);
        //fixing number to corespond to the matrix index
        r1--; c1--; r2--; c2--;

        int maxx = matrix[r1][c1];
        for (int i=r1; i <= r2; ++i) {
            for(int j=c1; j <= c2; ++j) {
                maxx = max(maxx, matrix[i][j]);
            }
        }

        cout << maxx << "\n";
    }



    return 0;
}